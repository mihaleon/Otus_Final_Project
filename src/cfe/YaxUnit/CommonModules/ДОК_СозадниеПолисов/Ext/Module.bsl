
#Область ПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
	
	ВерсияПродукта = НЕОПРЕДЕЛЕНО;
	
    ЮТТесты.ДобавитьТестовыйНабор("Документы Предварительный расчет и договор страхвоания: Проверка проведения и расчета премии").ВТранзакции()
		.ДобавитьТест("НаличиеТекущегоПродуктаОСАГО", "Провверяем наличие версии продукта ОСАГО в системе")
			.СПараметрами(ВерсияПродукта)
		.ДобавитьТест("НаличиеТекущейВерсииПродуктаОСАГО", "Провверяем наличие версии продукта ОСАГО в системе")
			.СПараметрами(ВерсияПродукта)
		.ДобавитьТест("ПроверкаЗаполенияДокументаРасчет", "Проверка заполнения документа Предварительный расчет (негативный расчет)")
			.СПараметрами(ВерсияПродукта, "", 0, ЛОЖЬ) 
		.ДобавитьТест("ПроверкаЗаполенияДокументаРасчет", "Проверка заполнения документа Предварительный расчет (ТПИ = Москва)")
			.СПараметрами(ВерсияПродукта, "Москва", 12600, ИСТИНА)	
		.ДобавитьТест("ПроверкаЗаполенияДокументаРасчет", "Проверка заполнения документа Предварительный расчет (ТПИ = Москва)")
			.СПараметрами(ВерсияПродукта, "Санкт-Петербург", 8400, ИСТИНА)			
		;

КонецПроцедуры

Процедура НаличиеТекущегоПродуктаОСАГО(ВерсияПродукта) Экспорт
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_СтраховыеПродуктыДСП";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.Условия.Добавить("НЕ ПометкаУдаления");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", "ОСАГО");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
	
	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатПустой(ОписаниеЗапроса)).ЭтоЛожь();	
КонецПроцедуры                                                             

Процедура НаличиеТекущейВерсииПродуктаОСАГО(ВерсияПродукта) Экспорт
	
	Продукт = ПолучитьПродуктОСАГО();
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_ВерсииСтраховыхПродуктовДСП";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.Условия.Добавить("НЕ ПометкаУдаления");
	ОписаниеЗапроса.Условия.Добавить("Владелец = &Владелец");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", "№ 1 от 01.01.2025");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Владелец", Продукт);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
	
	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатПустой(ОписаниеЗапроса)).ЭтоЛожь();	
КонецПроцедуры

Процедура ПроверкаЗаполенияДокументаРасчет(ВерсияПродукта, ТерриторияИспользования, ЗначениеПремии, РасчетВыполнен) Экспорт
	
	// Описание программного создания: https://bia-technologies.github.io/yaxunit/docs/features/test-data/data-generation/
	
	Если НЕ ЗначениеЗаполнено(ВерсияПродукта) Тогда
		ВерсияПродукта = ПолучитьВерсиюПродуктаОСАГО();
	КонецЕсли;	
	
	ДатаДокумента = ЮТест.Данные().СлучайнаяДатаПосле(ТекущаяДатаСеанса(), 2, "часа");
			
		
	ПредварительныйРасчет = СозданиеДокументаРасчет(ВерсияПродукта, ДатаДокумента, ТерриторияИспользования);								   
	сДанные = ЮТЗапросы.ЗначенияРеквизитов(ПредварительныйРасчет, "СуммаПремии,РасчетВыполнен,СтруктураРасчета");
	тзРасчет = сДанные.СтруктураРасчета.Выгрузить();
	ЮТест.ОжидаетЧто(сДанные)
		.ИмеетТип("Структура")
		.Заполнено()
		.Свойство("СуммаПремии").Равно(ЗначениеПремии)
    	.Свойство("РасчетВыполнен").Равно(РасчетВыполнен);
		
	//ЮТест.ОжидаетЧто(тзРасчет)
		
	
		
	

КонецПроцедуры 

Процедура ПроверкаЗаполненияДокументаДоговораСтрахования() Экспорт
	
КонецПроцедуры  

Функция ПолучитьПродуктОСАГО()
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_СтраховыеПродуктыДСП";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.Условия.Добавить("НЕ ПометкаУдаления");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", "ОСАГО");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
	
	Продукт = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].Ссылка;	
	
	Возврат Продукт;
КОнецФункции 

Функция ПолучитьВерсиюПродуктаОСАГО()
	Продукт = ПолучитьПродуктОСАГО();
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_ВерсииСтраховыхПродуктовДСП";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.Условия.Добавить("НЕ ПометкаУдаления");
	ОписаниеЗапроса.Условия.Добавить("Владелец = &Владелец");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", "№ 1 от 01.01.2025");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Владелец", Продукт);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
		
	ВерсияПродукта = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].Ссылка; 
	
	Возврат ВерсияПродукта;
КОнецФункции

Функция ПолучитьОбъектОСАГО()
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_ОбъектыСтрахования";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", "AUDI A3 M123MO955");
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
		
	ОбъектСтрахования = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].Ссылка; 
	
	Возврат ОбъектСтрахования;
КОнецФункции 

Функция ПолучитьТерриторию(Наименование)
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.мвв_Территории";
	ОписаниеЗапроса.Условия.Добавить("Наименование = &Наименование");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Наименование", Наименование);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("Ссылка");
		
	ОбъектСтрахования = ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)[0].Ссылка; 
	
	Возврат ОбъектСтрахования;
КОнецФункции

Процедура ПроверкаОстатковПоРегистрам() Экспорт
	
			

КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьТаблицу1ВТаблицу2(Тбл2, Тбл1, НазванияРесурсов)
	Ресурсы = СтрРазделить(НазванияРесурсов, ",", ЛОЖЬ); 
	Если Тбл2 = НЕОПРЕДЕЛЕНО Тогда
		Тбл2 = Тбл1.Скопировать();
	Иначе                                                
		флОстатки = Тбл2.Колонки.Найти("ВидДвижения") <> НЕОПРЕДЕЛЕНО;
		Для каждого тСтрока ИЗ Тбл1 Цикл
			тНовСтрока = Тбл2.Добавить();
			ЗаполнитьЗначенияСвойств(тНовСтрока, тСтрока);
			Если флОстатки Тогда
				Для каждого Ресурс ИЗ Ресурсы Цикл
					Если тНовСтрока.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
						тНовСтрока[Ресурс] = -тНовСтрока[Ресурс];
					КонецЕсли;
				КонецЦИкла;
			КонецЕсли;
		КонецЦикла;   
	КонецЕсли;	
КонецПроцедуры

Функция СозданиеТовара()
	
	// Создание товара с видом Товар
	//ТоварНовый = ЮТест.Данные().СоздатьЭлемент("Справочники.Товары");   - не подойдет, т.к. не можем отрегулировать вид товара
		
	КонструкторТовара = ЮТест.Данные().КонструкторОбъекта("Справочники.Товары")
		.ФикцияОбязательныхПолей()
		.Установить("Вид", Перечисления.ВидыТоваров.Товар)
		.Установить("Наименование", ЮТест.Данные().СлучайнаяСтрока(50))
		;
    ТоварНовый = КонструкторТовара.Записать();
	
	Возврат ТоварНовый;

КонецФункции

Функция СозданиеСклада()
	КонструкторСклада = ЮТест.Данные().КонструкторОбъекта("Справочники.Склады")
		.ФикцияОбязательныхПолей()		
		.Установить("Наименование", ЮТест.Данные().СлучайнаяСтрока(25))
		;
    Склад = КонструкторСклада.Записать();
	
	Возврат Склад;
КонецФункции

Функция СозданиеКонтрагента()
	КонструкторКонтрагента = ЮТест.Данные().КонструкторОбъекта("Справочники.Контрагенты")
		.ФикцияОбязательныхПолей()		
		.Установить("Наименование", ЮТест.Данные().СлучайнаяСтрока(30))
		;
    Контрагент = КонструкторКонтрагента.Записать();
	
	Возврат Контрагент;
КонецФункции

Функция СозданиеДокументаРасчет(ВерсияПродукта, ДатаДокумента, ТерриторияИспользования)

	КонструкторПрихода = ЮТест.Данные().КонструкторОбъекта("Документы.мвв_ПредварительныйРасчет")
		.ФикцияОбязательныхПолей()				
		.Установить("ВерсияПродукта", ВерсияПродукта)		
		.Установить("Дата", ДатаДокумента)
		//.ТабличнаяЧасть("Товары").ДобавитьСтроку()
		//	.Установить("Товар", ТекТовар)
		//	.Установить("Цена", Цена)
		//	.Установить("Количество", Количество)
		//	.Установить("Сумма", Сумма) 		
		;                               
		
	Ссылка = КонструкторПрихода.Записать();
	Об = Ссылка.ПолучитьОбъект();
		
	Об.ЗаполнитьСвойстваДляРасчета(); 
	
	Территория = НЕОПРЕДЕЛЕНО;
	Если ЗначениеЗаполнено(ТерриторияИспользования) Тогда
		Территория = ПолучитьТерриторию(ТерриторияИспользования);
	КонецЕсли;
	
	Для каждого тСтрока ИЗ Об.ДанныеДляРасчета Цикл
		Если тСтрока.Свойство.Наименование = "Объект Страхования" Тогда
			тСтрока.ЗначениеСвойства = ПолучитьОбъектОСАГО();
		ИначеЕсли тСтрока.Свойство.Наименование = "Дата начала" Тогда
			тСтрока.ЗначениеСвойства = ТекущаяДатаСеанса() + 60 * 60 * 24 * 2;
		ИначеЕсли тСтрока.Свойство.Наименование = "Дата окончания" Тогда
			тСтрока.ЗначениеСвойства = ДобавитьМесяц(ТекущаяДатаСеанса(), 12);
		ИначеЕсли тСТрока.Свойство.Наименование ="Территория преимущественного использования" И ЗначениеЗаполнено(Территория) Тогда
			тСтрока.ЗначениеСвойства = Территория;
		ИначеЕсли тСтрока.Свойство.Наименование = "Период использования" Тогда
			тСтрока.ЗначениеСвойства = 12;
		КонецЕсли;
	КонецЦикла;
	
	Об.РассчитатьПремиюНаСервере();
	
	ЮТест.ОжидаетЧто(Об)  // Объект, метод которого проверяем
		.Метод("Записать").Параметр(РежимЗаписиДокумента.Проведение)   // Указываем проверяемый метод и параметры вызова
		.НеВыбрасываетИсключение()
		.Свойство("Проведен").Равно(ИСТИНА)	;
	
	
	
	Возврат Об.Ссылка;

КонецФункции 

#КонецОбласти
