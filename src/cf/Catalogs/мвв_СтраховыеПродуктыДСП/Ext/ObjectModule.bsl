Перем мВалютаРегламентированногоУчета Экспорт;    // Валюта регламентированного учета

// Проверяет сущестуют ли ссылки по этому риску
//
// Параметры
//	Нет
//
// Возвращаемое значение:
//   Булево   – да/нет
//
Функция ПроверитьСуществуютСсылки() Экспорт

	Если ЭтоНовый() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Продукт
	|ИЗ
	|	Документ.ус_ДСП
	|ГДЕ
	|	Продукт = &Ссылка И
	|	Проведен = ИСТИНА
 	|";
	
	Возврат Не Запрос.Выполнить().Пустой();

КонецФункции // ПроверитьСуществуютСсылки()

// Процедура копирует подчиненных справочника
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура КопироватьПодчиненных(ОбъектКопирования) Экспорт

		НачатьТранзакцию();
		
		// сначала запишем
		Записать();
		
		ОбъектСсылка = ОбъектКопирования.Ссылка;
		
		// здесь будем хранить соответствие создаваемых объектов
		СоответствиеОбъектов = Новый Соответствие;
		
		// сначала скопируем хранилище файлов и шаблоны калькулятора
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОбъектСсылка", ОбъектСсылка);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Ссылка,
		|	0 КАК Индекс
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации
		|ГДЕ
		|	Объект = &ОбъектСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Ссылка,
		|	1
		|ИЗ
		|	Справочник.ус_ШаблоныКалькулятораПродуктовДСП
		|ГДЕ
		|	Продукт = &ОбъектСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Ссылка,
		|	2
		|ИЗ
		|	Справочник.ус_РазделыСвойствОбъектов
		|ГДЕ
		|	Владелец = &ОбъектСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Ссылка,
		|	3
		|ИЗ
		|	Справочник.ус_ВерсииСтраховыхПродуктовДСП
		|ГДЕ
		|	Владелец = &ОбъектСсылка
		|";
		Выборка = Запрос.Выполнить().Выбрать();
		// переберем
		Пока Выборка.Следующий() Цикл
			ОбъектСкопированный = Выборка.Ссылка.Скопировать();
			Индекс = Выборка.Индекс;
			// это хранилище
			Если  Индекс = 0 Тогда
				ОбъектСкопированный.Объект = Ссылка;
				// это шаблон
			ИначеЕсли Индекс = 1 Тогда
				ОбъектСкопированный.Версия = Ссылка;
				// это по владельцам
			Иначе
				ОбъектСкопированный.Владелец = Ссылка;
				// пропишем для версий
				Если Индекс = 3 Тогда
					ОбъектСкопированный.КопироватьПодчиненных(Выборка.Ссылка);
				КонецЕсли;
			КонецЕсли;
			// запишем
			ОбъектСкопированный.Записать();
			// вставим индекс
			СоответствиеОбъектов.Вставить(Выборка.Ссылка, ОбъектСкопированный.Ссылка);
		КонецЦикла;
		
		// еще раз запишем
		Записать();
		
		// пропишем назначение свойств
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	*
		|ИЗ
		|	РегистрСведений.ус_НазначенияСвойствОбъектов
		|ГДЕ
		|   РегистрСведений.ус_НазначенияСвойствОбъектов.Объект = &ОбъектСсылка
		|";
		
		ТаблицаНазначений = Запрос.Выполнить().Выгрузить();
		
		// переберем
		Для каждого СтрокаНазначения Из ТаблицаНазначений Цикл
			СтрокаНазначения.Объект	=  Ссылка;
			СтрокаНазначения.Раздел	=  СоответствиеОбъектов[СтрокаНазначения.Раздел];
		КонецЦикла; 
		
		// запишем в набор
		НаборЗаписей = РегистрыСведений.ус_НазначенияСвойствОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Ссылка, Истина);
		НаборЗаписей.Загрузить(ТаблицаНазначений);
		НаборЗаписей.Записать();
					
		// фиксируем
		ЗафиксироватьТранзакцию();
    
КонецПроцедуры // КопироватьПодчиненных()

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();