
// Функция возвращает результат запроса по справочнику контрагентов с заданным головным контрагентом
//
// Параметры:
//  ГоловнойКонтрагент - заданный головной контрагент
//
// Возвращаемое значение:
//  Результат - результат работы запроса
// 
Функция ПолучитьОбъектыПоЗаданномуГоловномуОбъекту(ГоловнойОбъект) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнойОбъект", ГоловнойОбъект);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Объекты.Ссылка КАК Объект
	|ИЗ
	|	Справочник.ус_ОбъектыСтрахования КАК Объекты
	|
	|ГДЕ
	|	Объекты.ГоловнойОбъект = &ГоловнойОбъект
	|   и Объекты.ГоловнойОбъект <> Объекты.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Объект";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьОбъектыПоЗаданномуГоловномуОбъекту()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ГоловнойОбъект) И ГоловнойОбъект <> Ссылка Тогда

		Если ЗначениеЗаполнено(ГоловнойОбъект.ГоловнойОбъект) И ГоловнойОбъект.ГоловнойОбъект <> ГоловнойОбъект Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Объект "+СокрЛП(ГоловнойОбъект)+" не может быть выбран головным, 
							|так как для него уже был назначен головной объект "+СокрЛП(ГоловнойОбъект.ГоловнойОбъект)+"!");
			Отказ = Истина;
			Возврат;
		Иначе

			// надо проверить, что если указываем головного объекта, то этот элемент уже не был установлен
			// в качестве головного у другого объекта.
			ВыборкаПоГоловномуОбъекту = ПолучитьОбъектыПоЗаданномуГоловномуОбъекту(Ссылка).Выбрать();
			Если ВыборкаПоГоловномуОбъекту.Количество() <> 0 Тогда

				СообщениеОНевозможностиЗаписи = "Объект "+СокрЛП(ЭтотОбъект)+" не может иметь головного объекта!
												|Этот объект уже установлен головным для: ";
				Пока ВыборкаПоГоловномуОбъекту.Следующий() Цикл
					СообщениеОНевозможностиЗаписи = СообщениеОНевозможностиЗаписи + Символы.ПС + СокрЛП(ВыборкаПоГоловномуОбъекту.Объект);
				КонецЦикла;

				ОбщегоНазначения.СообщитьОбОшибке(СообщениеОНевозможностиЗаписи);
				Отказ = Истина;
				Возврат;

			КонецЕсли;

		КонецЕсли;

	КонецЕсли;
КонецПроцедуры // ПередЗаписью()

Процедура ЗаполнитьСвойстваОбъекта() Экспорт
	ЭтотОбъект.ЗначенияСвойств.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ТипОбъекта) Тогда
		ОбщегоНазначения.СообщитьПользователю("Не заполнен тип объекта");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	мвв_НазначенияСвойствОбъектов.Свойство КАК Свойство,
	               |	мвв_НазначенияСвойствОбъектов.Раздел КАК Раздел,
	               |	мвв_НазначенияСвойствОбъектов.Порядок КАК Порядок
	               |ИЗ
	               |	РегистрСведений.мвв_НазначенияСвойствОбъектов КАК мвв_НазначенияСвойствОбъектов
	               |ГДЕ
	               |	мвв_НазначенияСвойствОбъектов.Объект = &Объект
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Порядок";
	Запрос.УстановитьПараметр("Объект", ЭтотОбъект.ТипОбъекта);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		тНовСтрока = ЭтотОбъект.ЗначенияСвойств.Добавить();
		ЗаполнитьЗначенияСвойств(тНовСтрока, Выборка);
	КонецЦикла;
КонецПроцедуры	